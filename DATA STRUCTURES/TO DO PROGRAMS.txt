 2. Given some non-overlapping intervals, we have to insert a new interval in between the
    given intervals, such that it should merge if its neccessary. Assume that intervals 
    have their start and end time given and the resultant interval be sorted.
    Question of Merge Intervals from interviewbit
    V-39
 3. Create a LinkedList and perform all methods of LinkedList. Also find the time taken by 
    LinkedList and ArrayList to add elements into it.  (V-40, T-23:00)
 4. Create a LinkedList without using predefined classes. (V-40, T-35:00)
 5. Create a Stack and perform all methods of Stack. (V-41, T-16:00)
 6. Create a Stack using LinkedList. (V-41, T-20:20)
 7. Solve Parenthesis Checker/Balancing problem. (V-41, T-40:00)
 8. Create a Queue and perform all methods of Queue. (V-42, T-18:00)
 9. Create a Queue using LinkedList. (V-42, T-23:00)
10. Create a Stack and Queue using Array Deque and perform all methods of Array Deque.         (V-43, T-6:30)
11. Create an Array Deque using Doubly LinkedList. (V-43, T-12:00)
12. Create a Priority Queue and perform all methods of Priority Queue. (V-44, T-9:00)
13. We are given N numbers and we need to find the K biggest numbers among them in 
    decreasing order. (GFG) (V-44, T-20:00)
14. We are given some linkedlist which has all elements sorted in it. Make a combined
    linkedlist with all the elements sorted. (V-44)
15. Solve the Sliding Window Maximum problem. (V-45)
16. Create a Set and perform all methods of Set. (V-46, T-6:30)
17. Given an array, find if there exists a subarray with sum equals to zero. (V-47)
    ZERO SUM SUBARRAY
18. Create a HashMap and perform all methods of Map. (V-48, T-4:00)
19. Implement HashCode and Equals. (V-49, T-2:30)
20. Given an array of strings, group anagrams together. (V-50) (LEETCODE)
21. Implement comparable and comparators. (V-51, T-5:00)

ALGORITHMS
1. Find the sum of first N natural numbers using Recursion. (V-52, T-7:50)
2. Calculate power using recursion a^b. + Fast Power (V-52, T-12:00)
3. Find all the paths in a n*m matrix (V-52, T-21:00)
4. Matrix - Flood Fill Problem 
   Given a matrix with some color filled (in form of numbers). We have to change a 
   particular color in the matrix such that color of all the blocks connected to it having
   same color also change (V-53, T-1:30)
5. String - Print all the permutation of a given string. (V-53, T-11:12)
6. Game Theory - Optimal Strategy to win in Coin game. (V-53, T-25:24)
7. Shortest path in a maze. (V-54, T-2:33)
8. Partition an array into two equal sums arrays. (V-54, T-17:30)